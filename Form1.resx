<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>19, 21</value>
  </metadata>
</root>